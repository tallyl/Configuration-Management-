
- name: gather os specific variables
  #debug: msg="{{ ansible_distribution }}"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
    - "{{ ansible_distribution }}.yml"
  tags: vars

- name: Run the equivalent of "apt-get update" as a separate step
  apt:
    update_cache: true

- name: Install required system packages
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
    state: latest
    update_cache: true

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Update apt and install docker-ce
  apt:
    name: "{{item}}"
    #name: docker-ce
    state: latest
    update_cache: true
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io

- name: Install Docker Module for Python
  pip:
    name: docker
  notify:
    - docker restart

- name: Start Docker
  service:
    name: docker
    state: started
    enabled: true

#- name: Create "docker" group
#  group:
    #    name: "{{ docker_group }}"
    #    state: present

# sudo usermod -aG docker root
- name: Add remote "ubuntu" user to "docker" group
  user:
    name: "{{item}}"
    groups: "docker"
    append: yes
  with_items: '{{ docker_users }}'
  when: 'docker_users is defined'

# Part 2
- name: pull and start ngnix container
  docker_container:
    image: nginx:stable
    name: nginx
    auto_remove: true
    state: started
    ports:
      - "8888:80"

# - include XX.yml
